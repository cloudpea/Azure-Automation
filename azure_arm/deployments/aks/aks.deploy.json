{
    "$schema": "https://schema.management.azure.com/schemas/2015-01-01/deploymentTemplate.json#",
    "contentVersion": "1.0.0.0",
    "parameters": {
        "location": {
            "type": "string",
            "defaultValue": "West Europe",
            "metadata": {
                "description": "The location of AKS resource."
            }
        },
        "applicationTag": {
            "type": "string",
            "defaultValue": "Kubernetes",
            "metadata": {
                "description": "Application Tag for ACR and AKS."
            }
        },
        "environmentTag": {
            "type": "string",
            "defaultValue": "Production",
            "metadata": {
                "description": "Environment Tag for ACR and AKS."
            }
        },
        "criticalityTag": {
            "type": "string",
            "defaultValue": "Tier 1",
            "metadata": {
                "description": "Criticality Tag for ACR and AKS."
            }
        },
        "ownerTag": {
            "type": "string",
            "defaultValue": "CloudPea",
            "metadata": {
                "description": "Owner Tag for ACR and AKS."
            }
        },
        "automationAccountName": {
            "type": "string",
            "defaultValue": "AA-PRD-1-CUSTOMER-1",
            "metadata": {
                "description": "The name of the Azure Container Registry."
            }
        },
        "storageAccountName": {
            "type": "string",
            "defaultValue": "saprdcustomeraks",
            "metadata": {
                "description": "The name of the Azure Container Registry."
            }
        },
        "acrName": {
            "type": "string",
            "defaultValue": "acrprdcustomeraks",
            "metadata": {
                "description": "The name of the Azure Container Registry."
            }
        },
        "keyVaultName":{
            "type": "string",
            "defaultValue": "KV-PRD-1-CUSTOMER-1",
            "metadata": {
                "description": "The name of the Azure Key Vault."
            }

        },
        "clusterName": {
            "type": "string",
            "defaultValue": "AKS-PRD-1-CUSTOMER-1",
            "metadata": {
                "description": "The name of the Managed Cluster resource."
            }
        },
        "k8sVersion": {
            "type": "string",
            "defaultValue": "1.11.2",
            "metadata": {
                "description": "Version for the Kubernetes Cluster"
            }
        },
        "clusterDnsPrefix": {
            "type": "string",
            "metadata": {
                "description": "Optional DNS prefix to use with hosted Kubernetes API server FQDN."
            }
        },
        "osDiskSizeGB": {
            "type": "int",
            "defaultValue": 0,
            "metadata": {
                "description": "Disk size (in GB) to provision for each of the agent pool nodes. This value ranges from 30 to 1023. Specifying 0 will apply the default disk size for that agentVMSize."
            },
            "minValue": 0,
            "maxValue": 1023
        },
        "agentCount": {
            "type": "int",
            "defaultValue": 1,
            "metadata": {
                "description": "The number of agent nodes for the cluster."
            },
            "minValue": 1,
            "maxValue": 50
        },
        "agentVMSize": {
            "type": "string",
            "defaultValue": "Standard_B2s_v2",
            "metadata": {
                "description": "The size of the Virtual Machine."
            }
        },
        "enableRBAC": {
            "type": "bool",
            "defaultValue": true,
            "metadata": {
                "description": "boolean flag to turn on and off of RBAC"
            }
        },
        "appRegClientId": {
            "metadata": {
                "description": "Application Registration Client ID for the AKS Cluster"
            },
            "type": "securestring"
        },
        "appRegObjectId": {
            "metadata": {
                "description": "Application Registration Object ID for the AKS Cluster"
            },
            "type": "securestring"
        },
        "appRegClientSecret": {
            "metadata": {
                "description": "Application Registration Client Secret for the AKS Cluster"
            },
            "type": "securestring"
        },
        "entAppObjectId": {
            "metadata": {
                "description": "Enterpride Application Object ID for the AKS Cluster"
            },
            "type": "securestring"
        }
    },
    "variables": {
        "UniqueStringBasedOnResourceGroupId": "[uniqueString(deployment().name, resourceGroup().id)]",
        "Reader": "[concat('/subscriptions/', subscription().subscriptionId, '/providers/Microsoft.Authorization/roleDefinitions/', 'acdd72a7-3385-48ef-bd42-f606fba81ae7')]"
    },
    "resources": [
        {
            "name": "[parameters('acrName')]",
            "type": "Microsoft.ContainerRegistry/registries",
            "apiVersion": "2017-10-01",
            "location": "[parameters('location')]",
            "sku": {
                "name": "Basic"
            },
            "properties": {
                "adminUserEnabled": false
            },
            "tags": {
                "Application": "[parameters('applicationTag')]",
                "Criticality": "[parameters('criticalityTag')]",
                "Environment": "[parameters('environmentTag')]",
                "Owner": "[parameters('ownerTag')]"
            }
        },
        {
            "apiVersion": "2018-03-31",
            "type": "Microsoft.ContainerService/managedClusters",
            "location": "[parameters('location')]",
            "name": "[parameters('clusterName')]",
            "properties": {
                "kubernetesVersion": "[parameters('k8sVersion')]",
                "enableRBAC": "[parameters('enableRBAC')]",
                "dnsPrefix": "[parameters('clusterDnsPrefix')]",
                "agentPoolProfiles": [
                    {
                        "name": "nodes",
                        "osDiskSizeGB": "[parameters('osDiskSizeGB')]",
                        "count": "[parameters('agentCount')]",
                        "vmSize": "[parameters('agentVMSize')]",
                        "osType": "Linux",
                        "storageProfile": "ManagedDisks"
                    }
                ],
                "servicePrincipalProfile": {
                    "clientId": "[parameters('appRegClientId')]",
                    "Secret": "[parameters('appRegClientSecret')]"
                },
                "networkProfile": {
                    "networkPlugin": "kubenet",
                    "serviceCidr": "10.0.0.0/16",
                    "dnsServiceIP": "10.0.0.10",
                    "dockerBridgeCidr": "172.17.0.1/16"
                }
            },
            "tags": {
                "Application": "[parameters('applicationTag')]",
                "Criticality": "[parameters('criticalityTag')]",
                "Environment": "[parameters('environmentTag')]",
                "Owner": "[parameters('ownerTag')]"
            }
        },
        {
            "type": "Microsoft.Authorization/roleAssignments",
            "apiVersion": "2017-05-01",
            "name": "[guid('AzureAutomationJobName', variables('UniqueStringBasedOnResourceGroupId'))]",
            "properties": {
                "roleDefinitionId": "[variables('Reader')]",
                "principalId": "[parameters('entAppObjectId')]",
                "scope": "[resourceGroup().id]"
            }
        },
        {
            "apiVersion": "2015-10-31",
            "type": "Microsoft.Automation/automationAccounts",
            "name": "[parameters('automationAccountName')]",
            "location": "[parameters('location')]",
            "properties": {
                "sku": {
                    "name": "Free"
                }
            },
            "tags": {
                "Application": "[parameters('applicationTag')]",
                "Criticality": "[parameters('criticalityTag')]",
                "Environment": "[parameters('environmentTag')]",
                "Owner": "[parameters('ownerTag')]"
            }
        },
        {
            "type": "Microsoft.Storage/storageAccounts",
            "name": "[parameters('storageAccountName')]",
            "location": "[parameters('location')]",
            "apiVersion": "2018-07-01",
            "sku": {
                "name": "Standard_GRS"
            },
            "kind": "BlobStorage",
            "properties": {
                "accessTier": "Cool",
                "supportsHttpsTrafficOnly": true
            },
            "tags": {
                "Application": "[parameters('applicationTag')]",
                "Criticality": "[parameters('criticalityTag')]",
                "Environment": "[parameters('environmentTag')]",
                "Owner": "[parameters('ownerTag')]"
            }
        },
        {
            "name": "[parameters('keyVaultName')]",
            "type": "Microsoft.KeyVault/vaults",
            "apiVersion": "2018-02-14",
            "location": "[parameters('location')]",
            "properties": {
                "tenantId": "[subscription().tenantId]",
                "sku": {
                    "family": "A",
                    "name": "standard"
                },
                "accessPolicies": [
                    {
                        "tenantId": "[subscription().tenantId]",
                        "objectId": "[parameters('appRegObjectId')]",
                        "applicationId": "[parameters('appRegClientId')]",
                        "permissions": {
                            "keys": [
                                "get"
                            ],
                            "secrets": [
                                "get"
                            ],
                            "certificates": [
                                "get"
                            ]
                        }
                    }
                ],
                "enabledForDeployment": true,
                "enabledForDiskEncryption": true,
                "enabledForTemplateDeployment": false,
                "enableSoftDelete": true,
                "enablePurgeProtection": true,
                "networkAcls": {
                    "bypass": "AzureServices",
                    "ipRules": [
                        {
                            "value": "10.0.0.0/16"
                        }
                    ]
                }
            },
            "tags": {
                "Application": "[parameters('applicationTag')]",
                "Criticality": "[parameters('criticalityTag')]",
                "Environment": "[parameters('environmentTag')]",
                "Owner": "[parameters('ownerTag')]"
            }
        },
        {
            "type": "Microsoft.Authorization/locks",
            "name": "[concat(resourceGroup().name, 'lock')]",
            "apiVersion": "2016-09-01",
            "properties": {
                "level": "CanNotDelete",
                "notes": "RG should not be deleted."
            }
        }
    ],
    "outputs": {
        "controlPlaneFQDN": {
            "type": "string",
            "value": "[reference(concat('Microsoft.ContainerService/managedClusters/', parameters('clusterName'))).fqdn]"
        }
    }
}